$items: 6;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

.header {
  background-color: $primary-color;
  height: 5.3125rem;
  width: 100%;
  position: relative;

  &--fixed {
    position: fixed;
    top: 0;
    z-index: 2;
  }

  &__logo {
    font-size: 1.5em;
    width: 100%;

    @include breakpoint("medium-landscape") {
      width: auto;
      float: left;
    }

    span {
      display: block;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      top: 1.4375rem;
      width: 13.8125rem;
      color: $white;
      font-weight: 800;

      @include breakpoint("medium-landscape") {
        position: static;
        transform: none;
        margin-left: 6.25rem;
        margin-top: 2rem;
        display: block;
      }
    }

    img {
      width: 2.8125rem;
      display: inline-block;
      position: absolute;
      bottom: 0;
      left: 0;

      @include breakpoint("medium-landscape") {
        width: 4.25rem;
      }
    }
  }

  &__nav {
    text-align: center;
    float: right;
    display: inline-block;
    margin: 12px 25px ;
    // Don't want pointer-events as menu is closed
    pointer-events: none;
    transition: $transition-duration;

    @include breakpoint("medium-landscape") {
      display: block;
      pointer-events: auto;
      width: auto;
      float: right;
      margin: 2.125rem 1.5625rem 0 0;
    }

    li {
      @include breakpoint("medium-landscape") {
        display: inline-block;
        margin-left: .9375rem;
      }
    }

    a {
      color: $white;
      padding: .3125rem;
      font-weight: bold;
      text-align: center;

      position: relative;
      display: inline-block;
      float: left;
      clear: both;
      color: transparent;
      letter-spacing: -6.2px;
      height: 7px;
      line-height: 7px;
      white-space: nowrap;
      transform: scaleY(0.2);
      transition: $transition-duration, opacity 1s;

      // Setting delays for the nav items in close transition
      @for $i from 1 through $items {
        &:nth-child(#{$i}) {
          $delay: ($i - 1) * $transition-delay;
          transition-delay: $delay;
          &:before {
            transition-delay: $delay;
          }
        }
      }

      // Adjusting width for the first line
      &:nth-child(1) {
        letter-spacing: -8px;
      }

      // Adjusting width for the second line
      &:nth-child(2) {
        letter-spacing: -7px;
      }

      // Adjusting from the fourth element onwards
      &:nth-child(n + 4) {
        letter-spacing: -8px;
        margin-top: -7px;
        opacity: 0;
      }

      // Getting the lines for the hamburger menu icon
      &:before {
        position: absolute;
        content: '';
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: $white;
        transform: translateY(-50%) scaleY(5);
        transition: $transition-duration;
      }


      @include breakpoint("medium-landscape") {
        font-size: 1.25em;
        height: auto;
        float: none;
        transform: none;
        line-height: 1;
        letter-spacing: normal !important;
        color: $white;

        &:before {
          content: '';
          display: none;
        }
      }

      &:hover, &:focus, &.active {
        color: $putty;
      }

    }
  }

  #toggle {
    @include breakpoint("medium-landscape") {
      display: none;
    }
  }

  /* Toggle functionality */
  @include breakpoint("only-mobile") {
    // To hide the checkbox
    #toggle {
      position: absolute;
      left: -100%;
      top: -100%;
    }

    #toggle:focus {

    & ~ .toggle-container .button-toggle {
        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7), inset 0 0 0 20px rgba(0, 0, 0, 0.7);
      }
    }

    // Styles for the 'open' state, if the checkbox is checked
    #toggle:checked {
      // Any element you need to change the style if menu is open goes here, using the sibling selector (~) as follows

    // Making the "X" icon using `:before` and `:after` pseudo-elements
      & ~ .toggle-container .button-toggle {
        box-shadow: 0 0 0 350px rgba(0, 0, 0, 0.7), inset 0 0 0 20px rgba(0, 0, 0, 0.7);

        &:before {
          transform: translateY(-50%) rotate(45deg) scale(1);
        }

        &:after {
          transform: translateY(-50%) rotate(-45deg) scale(1);
        }
      }

      // Open nav
      & ~ .header__nav {
        margin-top: 100px;
        pointer-events: auto;
        z-index: 999;
        position: relative;

        // Restoring nav items from "lines" in the menu icon
        .header__nav__link {
          color: $white;
          letter-spacing: 0;
          height: 40px;
          line-height: 40px;
          margin-top: 0;
          opacity: 1;
          transform: scaleY(1);
          transition: $transition-duration, opacity 0.1s;

          // Setting delays for the nav items in open transition
          @for $i from 1 through $items {
            &:nth-child(#{$i}) {
              $delay: ($items - $i) * $transition-delay;
              transition-delay: $delay;
              &:before {
                transition-delay: $delay;
              }
            }
          }

          // Hiding the lines
          &:before {
            opacity: 0;
          }
        }
      }
    }


    /* Toggle button */

    .button-toggle {
      position: absolute;
      display: inline-block;
      width: 70px;
      height: 100%;
      right: 0;
      top: 0;
      background-color:  rgba(0, 0, 0, 0.7);
      border: none;
      cursor: pointer;
      transition: $transition-duration + 0.1;
  //    box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.7), inset 0 0 0 20px rgba(0, 0, 0, 0.7);

      // Making the "X" icon using `:before` and `:after` pseudo-elements
      // Initially hidden because `scale(0)` transformation

      &:before, &:after {
        position: absolute;
        content: '';
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: $white;
        transition: $transition-duration;
      }

      &:before {
        transform: translateY(-50%) rotate(45deg) scale(0);
      }

      &:after {
        transform: translateY(-50%) rotate(-45deg) scale(0);
      }
    }

  }

}
